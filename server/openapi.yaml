openapi: 3.0.0
info:
  title: MERN E-commerce API
  version: 1.0.0
  description: API documentation for the MERN E-commerce application
servers:
  [
    {
      "url": "http://localhost:9006/api",
      "description": "Local mockoon server",
    },
    { "url": "http://localhost:3000/api", "description": "Local server" },
    {
      "url": "https://mern-ecommerce-uote.onrender.com/api",
      "description": "Production server",
    },
  ]

paths:
  /address/add:
    post:
      summary: Add a new address
      tags:
        - Address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                street:
                  type: string
                city:
                  type: string
                state:
                  type: string
                country:
                  type: string
                zipCode:
                  type: string
              required:
                - street
                - city
                - state
                - country
                - zipCode
      responses:
        "200":
          description: Address added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  address:
                    $ref: "#/components/schemas/Address"
        "400":
          description: Bad request

  /address:
    get:
      summary: Fetch all addresses
      tags:
        - Address
      responses:
        "200":
          description: List of all addresses
          content:
            application/json:
              schema:
                type: object
                properties:
                  addresses:
                    type: array
                    items:
                      $ref: "#/components/schemas/Address"
        "400":
          description: Bad request

  /address/{id}:
    get:
      summary: Fetch an address by ID
      tags:
        - Address
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Address details
          content:
            application/json:
              schema:
                type: object
                properties:
                  address:
                    $ref: "#/components/schemas/Address"
        "400":
          description: Bad request
        "404":
          description: Address not found

    put:
      summary: Update an address by ID
      tags:
        - Address
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                address:
                  $ref: "#/components/schemas/Address"
      responses:
        "200":
          description: Address updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        "400":
          description: Bad request

  /address/delete/{id}:
    delete:
      summary: Delete an address by ID
      tags:
        - Address
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Address deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        "400":
          description: Bad request

  /auth/login:
    post:
      summary: User login
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        "200":
          description: User logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  token:
                    type: string
                  user:
                    $ref: "#/components/schemas/User"
        "400":
          description: Bad request

  /auth/register:
    post:
      summary: User registration
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                firstName:
                  type: string
                lastName:
                  type: string
                password:
                  type: string
                isSubscribed:
                  type: boolean
              required:
                - email
                - firstName
                - lastName
                - password
      responses:
        "200":
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  token:
                    type: string
                  user:
                    $ref: "#/components/schemas/User"
        "400":
          description: Bad request

  /auth/forgot:
    post:
      summary: Forgot password
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
              required:
                - email
      responses:
        "200":
          description: Password reset link sent
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        "400":
          description: Bad request

  /auth/reset/{token}:
    post:
      summary: Reset password
      tags:
        - Auth
      parameters:
        - name: token
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
              required:
                - password
      responses:
        "200":
          description: Password reset successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        "400":
          description: Bad request
  /brand/add:
    post:
      summary: Add a new brand
      tags:
        - Brand
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                isActive:
                  type: boolean
              required:
                - name
                - description
      responses:
        "200":
          description: Brand added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  brand:
                    $ref: "#/components/schemas/Brand"
        "400":
          description: Bad request

  /brand/list:
    get:
      summary: Fetch active brands
      tags:
        - Brand
      responses:
        "200":
          description: List of active brands
          content:
            application/json:
              schema:
                type: object
                properties:
                  brands:
                    type: array
                    items:
                      $ref: "#/components/schemas/Brand"
        "400":
          description: Bad request

  /brand:
    get:
      summary: Fetch all brands
      tags:
        - Brand
      responses:
        "200":
          description: List of all brands
          content:
            application/json:
              schema:
                type: object
                properties:
                  brands:
                    type: array
                    items:
                      $ref: "#/components/schemas/Brand"
        "400":
          description: Bad request

  /brand/{id}:
    get:
      summary: Fetch a brand by ID
      tags:
        - Brand
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Brand details
          content:
            application/json:
              schema:
                type: object
                properties:
                  brand:
                    $ref: "#/components/schemas/Brand"
        "400":
          description: Bad request
        "404":
          description: Brand not found

    put:
      summary: Update a brand by ID
      tags:
        - Brand
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                brand:
                  $ref: "#/components/schemas/Brand"
      responses:
        "200":
          description: Brand updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        "400":
          description: Bad request

  /brand/{id}/active:
    put:
      summary: Update brand active status by ID
      tags:
        - Brand
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                brand:
                  $ref: "#/components/schemas/Brand"
      responses:
        "200":
          description: Brand active status updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        "400":
          description: Bad request

  /brand/delete/{id}:
    delete:
      summary: Delete a brand by ID
      tags:
        - Brand
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Brand deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        "400":
          description: Bad request

  /cart/add:
    post:
      summary: Add items to cart
      tags:
        - Cart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                products:
                  type: array
                  items:
                    type: object
                    properties:
                      product:
                        type: string
                      quantity:
                        type: integer
                      price:
                        type: number
                      tax:
                        type: number
      responses:
        "200":
          description: Items added to cart successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  cartId:
                    type: string
        "400":
          description: Bad request

  /cart/delete/{cartId}:
    delete:
      summary: Delete a cart by ID
      tags:
        - Cart
      parameters:
        - name: cartId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Cart deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        "400":
          description: Bad request

  /cart/add/{cartId}:
    post:
      summary: Add a product to a cart by ID
      tags:
        - Cart
      parameters:
        - name: cartId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product:
                  type: object
                  properties:
                    product:
                      type: string
                    quantity:
                      type: integer
                    price:
                      type: number
                    tax:
                      type: number
      responses:
        "200":
          description: Product added to cart successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        "400":
          description: Bad request

  /cart/delete/{cartId}/{productId}:
    delete:
      summary: Delete a product from a cart by ID
      tags:
        - Cart
      parameters:
        - name: cartId
          in: path
          required: true
          schema:
            type: string
        - name: productId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Product deleted from cart successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        "400":
          description: Bad request

  /category/add:
    post:
      summary: Add a new category
      tags:
        - Category
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                products:
                  type: array
                  items:
                    type: string
                isActive:
                  type: boolean
              required:
                - name
                - description
      responses:
        "200":
          description: Category added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  category:
                    $ref: "#/components/schemas/Category"
        "400":
          description: Bad request

  /category/list:
    get:
      summary: Fetch active categories
      tags:
        - Category
      responses:
        "200":
          description: List of active categories
          content:
            application/json:
              schema:
                type: object
                properties:
                  categories:
                    type: array
                    items:
                      $ref: "#/components/schemas/Category"
        "400":
          description: Bad request

  /category:
    get:
      summary: Fetch all categories
      tags:
        - Category
      responses:
        "200":
          description: List of all categories
          content:
            application/json:
              schema:
                type: object
                properties:
                  categories:
                    type: array
                    items:
                      $ref: "#/components/schemas/Category"
        "400":
          description: Bad request

  /category/{id}:
    get:
      summary: Fetch a category by ID
      tags:
        - Category
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Category details
          content:
            application/json:
              schema:
                type: object
                properties:
                  category:
                    $ref: "#/components/schemas/Category"
        "400":
          description: Bad request
        "404":
          description: Category not found

    put:
      summary: Update a category by ID
      tags:
        - Category
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category:
                  $ref: "#/components/schemas/Category"
      responses:
        "200":
          description: Category updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        "400":
          description: Bad request

  /category/{id}/active:
    put:
      summary: Update category active status by ID
      tags:
        - Category
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category:
                  $ref: "#/components/schemas/Category"
      responses:
        "200":
          description: Category active status updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        "400":
          description: Bad request

  /category/delete/{id}:
    delete:
      summary: Delete a category by ID
      tags:
        - Category
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Category deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        "400":
          description: Bad request

  /contact/add:
    post:
      summary: Add a new contact message
      tags:
        - Contact
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                message:
                  type: string
              required:
                - name
                - email
                - message
      responses:
        "200":
          description: Contact message added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  contact:
                    $ref: "#/components/schemas/Contact"
        "400":
          description: Bad request

  /health:
    get:
      summary: Health check
      tags:
        - Health
      responses:
        "200":
          description: Health check successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string

  /merchant/add:
    post:
      summary: Add a new merchant
      tags:
        - Merchant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                business:
                  type: string
                phoneNumber:
                  type: string
                email:
                  type: string
                brandName:
                  type: string
              required:
                - name
                - business
                - phoneNumber
                - email
                - brandName
      responses:
        "200":
          description: Merchant added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  merchant:
                    $ref: "#/components/schemas/Merchant"
        "400":
          description: Bad request

  /merchant/search:
    get:
      summary: Search merchants
      tags:
        - Merchant
      parameters:
        - name: search
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List of merchants matching the search criteria
          content:
            application/json:
              schema:
                type: object
                properties:
                  merchants:
                    type: array
                    items:
                      $ref: "#/components/schemas/Merchant"
        "400":
          description: Bad request

  /merchant:
    get:
      summary: Fetch all merchants
      tags:
        - Merchant
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
        - name: limit
          in: query
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: List of all merchants
          content:
            application/json:
              schema:
                type: object
                properties:
                  merchants:
                    type: array
                    items:
                      $ref: "#/components/schemas/Merchant"
                  totalPages:
                    type: integer
                  currentPage:
                    type: integer
                  count:
                    type: integer
        "400":
          description: Bad request

  /merchant/{id}/active:
    put:
      summary: Update merchant active status by ID
      tags:
        - Merchant
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                merchant:
                  $ref: "#/components/schemas/Merchant"
      responses:
        "200":
          description: Merchant active status updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        "400":
          description: Bad request

  /merchant/approve/{id}:
    put:
      summary: Approve a merchant by ID
      tags:
        - Merchant
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Merchant approved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        "400":
          description: Bad request

  /merchant/reject/{id}:
    put:
      summary: Reject a merchant by ID
      tags:
        - Merchant
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Merchant rejected successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        "400":
          description: Bad request

  /merchant/signup/{token}:
    post:
      summary: Merchant signup
      tags:
        - Merchant
      parameters:
        - name: token
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                firstName:
                  type: string
                lastName:
                  type: string
                password:
                  type: string
              required:
                - email
                - firstName
                - lastName
                - password
      responses:
        "200":
          description: Merchant signed up successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        "400":
          description: Bad request

  /merchant/delete/{id}:
    delete:
      summary: Delete a merchant by ID
      tags:
        - Merchant
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Merchant deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        "400":
          description: Bad request

  /newsletter/subscribe:
    post:
      summary: Subscribe to the newsletter
      tags:
        - Newsletter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
              required:
                - email
      responses:
        "200":
          description: Successfully subscribed to the newsletter
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        "400":
          description: Bad request

  /order/add:
    post:
      summary: Add a new order
      tags:
        - Order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cartId:
                  type: string
                total:
                  type: number
              required:
                - cartId
                - total
      responses:
        "200":
          description: Order added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  order:
                    type: object
                    properties:
                      _id:
                        type: string
        "400":
          description: Bad request

  /order/search:
    get:
      summary: Search orders
      tags:
        - Order
      parameters:
        - name: search
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List of orders matching the search criteria
          content:
            application/json:
              schema:
                type: object
                properties:
                  orders:
                    type: array
                    items:
                      $ref: "#/components/schemas/Order"
        "400":
          description: Bad request

  /order:
    get:
      summary: Fetch all orders
      tags:
        - Order
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
        - name: limit
          in: query
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: List of all orders
          content:
            application/json:
              schema:
                type: object
                properties:
                  orders:
                    type: array
                    items:
                      $ref: "#/components/schemas/Order"
                  totalPages:
                    type: integer
                  currentPage:
                    type: integer
                  count:
                    type: integer
        "400":
          description: Bad request

  /order/me:
    get:
      summary: Fetch my orders
      tags:
        - Order
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
        - name: limit
          in: query
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: List of my orders
          content:
            application/json:
              schema:
                type: object
                properties:
                  orders:
                    type: array
                    items:
                      $ref: "#/components/schemas/Order"
                  totalPages:
                    type: integer
                  currentPage:
                    type: integer
                  count:
                    type: integer
        "400":
          description: Bad request

  /order/{orderId}:
    get:
      summary: Fetch an order by ID
      tags:
        - Order
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Order details
          content:
            application/json:
              schema:
                type: object
                properties:
                  order:
                    $ref: "#/components/schemas/Order"
        "400":
          description: Bad request
        "404":
          description: Order not found

  /order/cancel/{orderId}:
    delete:
      summary: Cancel an order by ID
      tags:
        - Order
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Order cancelled successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        "400":
          description: Bad request

  /order/status/item/{itemId}:
    put:
      summary: Update order item status by item ID
      tags:
        - Order
      parameters:
        - name: itemId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                orderId:
                  type: string
                cartId:
                  type: string
                status:
                  type: string
              required:
                - orderId
                - cartId
                - status
      responses:
        "200":
          description: Order item status updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        "400":
          description: Bad request

  /product/item/{slug}:
    get:
      summary: Fetch product by slug
      tags:
        - Product
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Product details
          content:
            application/json:
              schema:
                type: object
                properties:
                  product:
                    $ref: "#/components/schemas/Product"
        "400":
          description: Bad request
        "404":
          description: Product not found

  /product/list/search/{name}:
    get:
      summary: Search products by name
      tags:
        - Product
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List of products matching the search criteria
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      $ref: "#/components/schemas/Product"
        "400":
          description: Bad request

  /product/list:
    get:
      summary: Fetch store products by advanced filters
      tags:
        - Product
      parameters:
        - name: sortOrder
          in: query
          required: false
          schema:
            type: string
        - name: rating
          in: query
          required: false
          schema:
            type: number
        - name: max
          in: query
          required: false
          schema:
            type: number
        - name: min
          in: query
          required: false
          schema:
            type: number
        - name: category
          in: query
          required: false
          schema:
            type: string
        - name: brand
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
        - name: limit
          in: query
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: List of products
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      $ref: "#/components/schemas/Product"
                  totalPages:
                    type: integer
                  currentPage:
                    type: integer
                  count:
                    type: integer
        "400":
          description: Bad request

  /product/list/select:
    get:
      summary: Fetch all products for selection
      tags:
        - Product
      responses:
        "200":
          description: List of products
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      $ref: "#/components/schemas/Product"
        "400":
          description: Bad request

  /product/add:
    post:
      summary: Add a new product
      tags:
        - Product
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                sku:
                  type: string
                name:
                  type: string
                description:
                  type: string
                quantity:
                  type: integer
                price:
                  type: number
                taxable:
                  type: boolean
                isActive:
                  type: boolean
                brand:
                  type: string
                image:
                  type: string
                  format: binary
              required:
                - sku
                - name
                - description
                - quantity
                - price
                - brand
                - image
      responses:
        "200":
          description: Product added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  product:
                    $ref: "#/components/schemas/Product"
        "400":
          description: Bad request

  /product:
    get:
      summary: Fetch all products
      tags:
        - Product
      responses:
        "200":
          description: List of all products
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      $ref: "#/components/schemas/Product"
        "400":
          description: Bad request

  /product/{id}:
    get:
      summary: Fetch a product by ID
      tags:
        - Product
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Product details
          content:
            application/json:
              schema:
                type: object
                properties:
                  product:
                    $ref: "#/components/schemas/Product"
        "400":
          description: Bad request
        "404":
          description: Product not found

    put:
      summary: Update a product by ID
      tags:
        - Product
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product:
                  $ref: "#/components/schemas/Product"
      responses:
        "200":
          description: Product updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        "400":
          description: Bad request

  /product/{id}/active:
    put:
      summary: Update product active status by ID
      tags:
        - Product
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product:
                  $ref: "#/components/schemas/Product"
      responses:
        "200":
          description: Product active status updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        "400":
          description: Bad request

  /product/delete/{id}:
    delete:
      summary: Delete a product by ID
      tags:
        - Product
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Product deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        "400":
          description: Bad request

  /review/add:
    post:
      summary: Add a new review
      tags:
        - Review
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product:
                  type: string
                rating:
                  type: number
                comment:
                  type: string
              required:
                - product
                - rating
                - comment
      responses:
        "200":
          description: Review added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  review:
                    $ref: "#/components/schemas/Review"
        "400":
          description: Bad request

  /review:
    get:
      summary: Fetch all reviews
      tags:
        - Review
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
        - name: limit
          in: query
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: List of all reviews
          content:
            application/json:
              schema:
                type: object
                properties:
                  reviews:
                    type: array
                    items:
                      $ref: "#/components/schemas/Review"
                  totalPages:
                    type: integer
                  currentPage:
                    type: integer
                  count:
                    type: integer
        "400":
          description: Bad request

  /review/{slug}:
    get:
      summary: Fetch reviews by product slug
      tags:
        - Review
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List of reviews for the product
          content:
            application/json:
              schema:
                type: object
                properties:
                  reviews:
                    type: array
                    items:
                      $ref: "#/components/schemas/Review"
        "400":
          description: Bad request
        "404":
          description: Product not found

  /review/{id}:
    put:
      summary: Update a review by ID
      tags:
        - Review
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                review:
                  $ref: "#/components/schemas/Review"
      responses:
        "200":
          description: Review updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        "400":
          description: Bad request

  /review/approve/{reviewId}:
    put:
      summary: Approve a review by ID
      tags:
        - Review
      parameters:
        - name: reviewId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Review approved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        "400":
          description: Bad request

  /review/reject/{reviewId}:
    put:
      summary: Reject a review by ID
      tags:
        - Review
      parameters:
        - name: reviewId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Review rejected successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        "400":
          description: Bad request

  /review/delete/{id}:
    delete:
      summary: Delete a review by ID
      tags:
        - Review
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Review deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        "400":
          description: Bad request

  /user/search:
    get:
      summary: Search users
      tags:
        - User
      parameters:
        - name: search
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List of users matching the search criteria
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
        "400":
          description: Bad request

  /user:
    get:
      summary: Fetch all users
      tags:
        - User
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
        - name: limit
          in: query
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: List of all users
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
                  totalPages:
                    type: integer
                  currentPage:
                    type: integer
                  count:
                    type: integer
        "400":
          description: Bad request
    put:
      summary: Update user profile
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                profile:
                  $ref: "#/components/schemas/User"
      responses:
        "200":
          description: User profile updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  user:
                    $ref: "#/components/schemas/User"
        "400":
          description: Bad request

  /user/me:
    get:
      summary: Fetch my profile
      tags:
        - User
      responses:
        "200":
          description: User profile details
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: "#/components/schemas/User"
        "400":
          description: Bad request

  /wishlist:
    post:
      summary: Add or update wishlist
      tags:
        - Wishlist
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product:
                  type: string
                isLiked:
                  type: boolean
              required:
                - product
                - isLiked
      responses:
        "200":
          description: Wishlist updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  wishlist:
                    $ref: "#/components/schemas/Wishlist"
        "400":
          description: Bad request
    get:
      summary: Fetch wishlist
      tags:
        - Wishlist
      responses:
        "200":
          description: List of wishlist items
          content:
            application/json:
              schema:
                type: object
                properties:
                  wishlist:
                    type: array
                    items:
                      $ref: "#/components/schemas/Wishlist"
        "400":
          description: Bad request

components:
  schemas:
    Category:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        description:
          type: string
        products:
          type: array
          items:
            type: string
        isActive:
          type: boolean

    Brand:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        description:
          type: string
        isActive:
          type: boolean

    Address:
      type: object
      properties:
        _id:
          type: string
        street:
          type: string
        city:
          type: string
        state:
          type: string
        country:
          type: string
        zipCode:
          type: string

    User:
      type: object
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        role:
          type: string

    Contact:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        email:
          type: string
        message:
          type: string

    Merchant:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        business:
          type: string
        phoneNumber:
          type: string
        email:
          type: string
        brandName:
          type: string
        status:
          type: string
        isActive:
          type: boolean

    Order:
      type: object
      properties:
        _id:
          type: string
        cart:
          type: string
        user:
          type: string
        total:
          type: number
        created:
          type: string
        products:
          type: array
          items:
            type: object
            properties:
              product:
                type: string
              quantity:
                type: integer
              price:
                type: number
              tax:
                type: number
              status:
                type: string

    Product:
      type: object
      properties:
        _id:
          type: string
        sku:
          type: string
        name:
          type: string
        description:
          type: string
        quantity:
          type: integer
        price:
          type: number
        taxable:
          type: boolean
        isActive:
          type: boolean
        brand:
          type: string
        imageUrl:
          type: string
        imageKey:
          type: string

    Review:
      type: object
      properties:
        _id:
          type: string
        product:
          type: string
        user:
          type: string
        rating:
          type: number
        comment:
          type: string
        status:
          type: string
        created:
          type: string

    Wishlist:
      type: object
      properties:
        _id:
          type: string
        product:
          type: string
        user:
          type: string
        isLiked:
          type: boolean
        updated:
          type: string
